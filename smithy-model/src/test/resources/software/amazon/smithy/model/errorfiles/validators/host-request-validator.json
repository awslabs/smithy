{
  "smithy": "0.2.0",
  "ns.foo": {
    "shapes": {
      "MyService": {
        "type": "service",
        "version": "2017-01-17",
        "protocols": [{"name": "foo"}],
        "operations": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "J",
          "K",
          "L"
        ]
      },
      "A": {
        "type": "operation",
        "readonly": true,
        "endpoint": {
          "hostPrefix": "A-{foo}"
        }
      },
      "B": {
        "type": "operation",
        "readonly": true,
        "input": "BInput",
        "output": "BOutput",
        "endpoint": {
          "hostPrefix": "B-{foo}"
        }
      },
      "BInput": {
        "type": "structure"
      },
      "BOutput": {
        "type": "structure"
      },
      "C": {
        "type": "operation",
        "readonly": true,
        "input": "CInput",
        "endpoint": {
          "hostPrefix": "C-{foo}"
        }
      },
      "CInput": {
        "type": "structure",
        "members": {
          "foo": {
            "target": "String",
            "hostLabel": true,
            "required": true
          }
        }
      },
      "D": {
        "type": "operation",
        "readonly": true,
        "input": "DInput",
        "endpoint": {
          "hostPrefix": "D-{foo}"
        }
      },
      "DInput": {
        "type": "structure",
        "members": {
          "foo": {
            "target": "String",
            "required": true
          }
        }
      },
      "E": {
        "type": "operation",
        "readonly": true,
        "input": "EInput",
        "endpoint": {
          "hostPrefix": "E-{foo}"
        }
      },
      "EInput": {
        "type": "structure",
        "members": {
          "foo": {
            "target": "String",
            "hostLabel": true
          }
        }
      },
      "F": {
        "type": "operation",
        "readonly": true,
        "input": "FInput",
        "endpoint": {
          "hostPrefix": "F-{foo}"
        }
      },
      "FInput": {
        "type": "structure",
        "members": {
          "foo": {
            "target": "Integer",
            "hostLabel": true,
            "required": true
          }
        }
      },
      "G": {
        "type": "operation",
        "readonly": true,
        "input": "GInput",
        "endpoint": {
          "hostPrefix": "G-{foo}-{bar}"
        }
      },
      "GInput": {
        "type": "structure",
        "members": {
          "foo": {
            "target": "String",
            "hostLabel": true,
            "required": true
          },
          "bar": {
            "target": "String",
            "hostLabel": true,
            "required": true
          }
        }
      },
      "H": {
        "type": "operation",
        "readonly": true,
        "input": "BInput",
        "endpoint": {
          "hostPrefix": "H.1234567890123456789012345678901234567890123456789012345678901234."
        }
      },
      "J": {
        "type": "operation",
        "readonly": true,
        "input": "BInput",
        "endpoint": {
          "hostPrefix": "1234567890123456789012345678901234567890123456789012345678901234.J."
        }
      },
      "K": {
        "type": "operation",
        "readonly": true,
        "input": "BInput",
        "endpoint": {
          "hostPrefix": "data.||+."
        }
      },
      "L": {
        "type": "operation",
        "readonly": true,
        "input": "BInput",
        "endpoint": {
          "hostPrefix": "L."
        }
      },
      "M": {
        "type": "operation",
        "readonly": true,
        "input": "MInput",
        "endpoint": {
          "hostPrefix": "M-{foo}."
        }
      },
      "MInput": {
        "type": "structure",
        "members": {
          "foo": {
            "target": "String",
            "hostLabel": true,
            "required": true
          }
        }
      },
      "Integer": {
        "type": "integer"
      },
      "String": {
        "type": "string"
      }
    }
  }
}
