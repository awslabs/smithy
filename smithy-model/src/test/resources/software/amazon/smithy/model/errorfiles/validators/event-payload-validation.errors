[ERROR] (EventPayloadTrait) ns.foo#InvalidEvent1 / [22, 30]: This event structure contains a member marked with the `eventPayload` trait, so all other members must be marked with the `eventHeader` trait. However, the following member(s) are not marked with the eventHeader trait: `baz`
[ERROR] (ExclusiveStructureMemberTrait) ns.foo#InvalidEvent2 / [34, 30]: The `eventPayload` trait can be applied to only a single member of a structure, but was found on the following members: `baz`, `foo`
[ERROR] (ExclusiveStructureMemberTrait) ns.foo#InvalidEvent2 / [34, 30]: The `eventPayload` trait can be applied to only a single member of a structure, but was found on the following members: `baz`, `foo`
[ERROR] (TraitTarget) ns.foo#InvalidEvent2$foo / [37, 28]: Trait `eventPayload` cannot be applied to `ns.foo#InvalidEvent2$foo`. This trait may only be applied to shapes that match the following selector: member:of(structure):test(> :each(blob, string, structure, union))
[ERROR] (TraitTarget) ns.foo#InvalidEvent3$foo / [50, 28]: Trait `eventHeader` cannot be applied to `ns.foo#InvalidEvent3$foo`. This trait may only be applied to shapes that match the following selector: member:of(structure):test( > :each(boolean, byte, short, integer, long, blob, string, timestamp))
[ERROR] (TraitTarget) ns.foo#InvalidEvent4$foo / [63, 28]: Trait `eventPayload` cannot be applied to `ns.foo#InvalidEvent4$foo`. This trait may only be applied to shapes that match the following selector: member:of(structure):test(> :each(blob, string, structure, union))
